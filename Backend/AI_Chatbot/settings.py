"""
Django settings for AI_Chatbot project.

Generated by 'django-admin startproject' using Django 5.2.7.
"""

from pathlib import Path
from datetime import timedelta # <-- Import timedelta for JWT settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production

SECRET_KEY = 'django-insecure-zpdxwzm@m@a5remy3m1bp)9zoeh240b6mk&oq=((0!b@=dpp$%'

DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Your Apps
    'chatbot',
    'accounts',
    
    # Third-party Apps
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',  # Required for your React frontend
]

MIDDLEWARE = [
    # CORS Middleware MUST be at the very top
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AI_Chatbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AI_Chatbot.wsgi.application'


# Database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'chatbot_db',
        'USER':'chatbot_user',
        'PASSWORD':'9862136711',
        'HOST': 'localhost',
        'PORT':'5432'
    }
}


# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files

STATIC_URL = 'static/'

# Default primary key field type

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ============================================
# API / FRONTEND CONFIGURATION ðŸš€
# ============================================

## 1. CORS Headers (Cross-Origin Resource Sharing)

# Whitelist the React development server.
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # React frontend
    # Add your production domain when deployed, e.g., 'https://yourfrontend.com'
]

# If your React app is sending cookies/session data (though tokens are preferred with DRF)
# CORS_ALLOW_CREDENTIALS = True 


## 2. Django REST Framework (DRF)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # Use Simple JWT as the primary authentication method
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # Set a safe default (e.g., read-only for unauthenticated users)
        # 'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    )
}

## 3. Simple JWT Configuration

SIMPLE_JWT = {
    # Set the token lifespans
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # Short-lived for security
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),    # Longer for convenience
    
    # Enable blacklisting for the LogoutView to work correctly
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    
    # Ensure tokens are sent in the correct format (Bearer)
    'AUTH_HEADER_TYPES': ('Bearer',),
    
    # Add to your database if you want to explicitly log out users (blacklist)
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}

# 4. CSRF Configuration (Needed for token-based authentication with non-browser clients)

# Allow the React origin to send CSRF tokens (if you are sending them).
# This is usually not strictly necessary when only using JWT but is good practice.
# CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS